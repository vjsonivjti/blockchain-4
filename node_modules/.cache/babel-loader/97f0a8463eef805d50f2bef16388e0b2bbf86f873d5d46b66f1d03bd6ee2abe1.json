{"ast":null,"code":"var _jsxFileName = \"/home/vatsal/Desktop/React-Voting-Application/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { contractAbi, contractAddress } from './Constant/constant';\nimport Login from './Components/Login';\nimport Finished from './Components/Finished';\nimport Connected from './Components/Connected';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [votingStatus, setVotingStatus] = useState(true);\n  const [remainingTime, setremainingTime] = useState('');\n  const [candidates, setCandidates] = useState([]);\n  const [number, setNumber] = useState('');\n  const [CanVote, setCanVote] = useState(true);\n  useEffect(() => {\n    // getCandidates();\n    // getRemainingTime();\n    // getCurrentStatus();\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  });\n  async function vote() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contractInstance = new ethers.Contract(contractAddress, contractAbi, signer);\n    const tx = await contractInstance.vote(number);\n    await tx.wait();\n    canVote();\n  }\n  async function canVote() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contractInstance = new ethers.Contract(contractAddress, contractAbi, signer);\n    const voteStatus = await contractInstance.voters(await signer.getAddress());\n    setCanVote(voteStatus);\n  }\n  async function getCandidates() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contractInstance = new ethers.Contract(contractAddress, contractAbi, signer);\n    const candidatesList = await contractInstance.getAllVotesOfCandiates();\n    const formattedCandidates = candidatesList.map((candidate, index) => {\n      return {\n        index: index,\n        name: candidate.name,\n        voteCount: candidate.voteCount.toNumber()\n      };\n    });\n    setCandidates(formattedCandidates);\n  }\n  async function getCurrentStatus() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contractInstance = new ethers.Contract(contractAddress, contractAbi, signer);\n    const status = await contractInstance.getVotingStatus();\n    console.log(status);\n    setVotingStatus(status);\n  }\n  async function getRemainingTime() {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    await provider.send(\"eth_requestAccounts\", []);\n    const signer = provider.getSigner();\n    const contractInstance = new ethers.Contract(contractAddress, contractAbi, signer);\n    const time = await contractInstance.getRemainingTime();\n    console.log(time);\n    setremainingTime(parseInt(time, 16));\n  }\n  function handleAccountsChanged(accounts) {\n    if (accounts.length > 0 && account !== accounts[0]) {\n      setAccount(accounts[0]);\n      canVote();\n    } else {\n      setIsConnected(false);\n      setAccount(null);\n    }\n  }\n  async function connectToMetamask() {\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        setProvider(provider);\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n        console.log(\"Metamask Connected : \" + address);\n        setIsConnected(true);\n        // canVote();\n      } catch (err) {\n        console.error(\"WWW\", err);\n      }\n    } else {\n      console.error(\"Metamask is not detected in the browser\");\n    }\n  }\n  async function handleNumberChange(e) {\n    setNumber(e.target.value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: votingStatus ? isConnected ? /*#__PURE__*/_jsxDEV(Connected, {\n      account: account,\n      candidates: candidates,\n      remainingTime: remainingTime,\n      number: number,\n      handleNumberChange: handleNumberChange,\n      voteFunction: vote,\n      showButton: CanVote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 40\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      connectWallet: connectToMetamask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Finished, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 74\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"I8oiZFUObCS8m1k/UBwTBRk6RiM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","ethers","contractAbi","contractAddress","Login","Finished","Connected","jsxDEV","_jsxDEV","App","_s","provider","setProvider","account","setAccount","isConnected","setIsConnected","votingStatus","setVotingStatus","remainingTime","setremainingTime","candidates","setCandidates","number","setNumber","CanVote","setCanVote","window","ethereum","on","handleAccountsChanged","removeListener","vote","providers","Web3Provider","send","signer","getSigner","contractInstance","Contract","tx","wait","canVote","voteStatus","voters","getAddress","getCandidates","candidatesList","getAllVotesOfCandiates","formattedCandidates","map","candidate","index","name","voteCount","toNumber","getCurrentStatus","status","getVotingStatus","console","log","getRemainingTime","time","parseInt","accounts","length","connectToMetamask","address","err","error","handleNumberChange","e","target","value","className","children","voteFunction","showButton","fileName","_jsxFileName","lineNumber","columnNumber","connectWallet","_c","$RefreshReg$"],"sources":["/home/vatsal/Desktop/React-Voting-Application/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {ethers} from 'ethers';\nimport {contractAbi, contractAddress} from './Constant/constant';\nimport Login from './Components/Login';\nimport Finished from './Components/Finished';\nimport Connected from './Components/Connected';\nimport './App.css';\n\nfunction App() {\n  const [provider, setProvider] = useState(null);\n  const [account, setAccount] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const [votingStatus, setVotingStatus] = useState(true);\n  const [remainingTime, setremainingTime] = useState('');\n  const [candidates, setCandidates] = useState([]);\n  const [number, setNumber] = useState('');\n  const [CanVote, setCanVote] = useState(true);\n\n\n  useEffect( () => {\n    // getCandidates();\n    // getRemainingTime();\n    // getCurrentStatus();\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n    }\n\n    return() => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    }\n  });\n\n\n  async function vote() {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const contractInstance = new ethers.Contract (\n        contractAddress, contractAbi, signer\n      );\n\n      const tx = await contractInstance.vote(number);\n      await tx.wait();\n      canVote();\n  }\n\n\n  async function canVote() {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const contractInstance = new ethers.Contract (\n        contractAddress, contractAbi, signer\n      );\n      const voteStatus = await contractInstance.voters(await signer.getAddress());\n      setCanVote(voteStatus);\n\n  }\n\n  async function getCandidates() {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const contractInstance = new ethers.Contract (\n        contractAddress, contractAbi, signer\n        );\n      const candidatesList = await contractInstance.getAllVotesOfCandiates();\n      const formattedCandidates = candidatesList.map((candidate, index) => {\n        return {\n          index: index,\n          name: candidate.name,\n          voteCount: candidate.voteCount.toNumber()\n        }\n      });\n      setCandidates(formattedCandidates);\n  }\n\n\n  async function getCurrentStatus() {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const contractInstance = new ethers.Contract (\n        contractAddress, contractAbi, signer\n      );\n      const status = await contractInstance.getVotingStatus();\n      console.log(status);\n      setVotingStatus(status);\n  }\n\n  async function getRemainingTime() {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const contractInstance = new ethers.Contract (\n        contractAddress, contractAbi, signer\n      );\n      const time = await contractInstance.getRemainingTime();\n      console.log(time);\n      setremainingTime(parseInt(time, 16));\n  }\n\n  function handleAccountsChanged(accounts) {\n    if (accounts.length > 0 && account !== accounts[0]) {\n      setAccount(accounts[0]);\n      canVote();\n    } else {\n      setIsConnected(false);\n      setAccount(null);\n    }\n  }\n\n  async function connectToMetamask() {\n    if (window.ethereum) {\n      try {\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        setProvider(provider);\n        await provider.send(\"eth_requestAccounts\", []);\n        const signer = provider.getSigner();\n        const address = await signer.getAddress();\n        setAccount(address);\n        console.log(\"Metamask Connected : \" + address);\n        setIsConnected(true);\n        // canVote();\n      } catch (err) {\n        console.error(\"WWW\",err);\n      }\n    } else {\n      console.error(\"Metamask is not detected in the browser\")\n    }\n  }\n\n  async function handleNumberChange(e) {\n    setNumber(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      { votingStatus ? (isConnected ? (<Connected \n                      account = {account}\n                      candidates = {candidates}\n                      remainingTime = {remainingTime}\n                      number= {number}\n                      handleNumberChange = {handleNumberChange}\n                      voteFunction = {vote}\n                      showButton = {CanVote}/>) \n                      \n                      : \n                      \n                      (<Login connectWallet = {connectToMetamask}/>)) : (<Finished />)}\n      \n    </div>\n  );\n\n\n\n}\n\n\n\n\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}